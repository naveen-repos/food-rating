openapi: "3.0.1"
info:
  title: "memcached_api"
  description: "This is memcached_api  for demonstration purposes"
  version: "2020-06-30T13:56:21Z"
schemes:
  - https
paths:
  /:
    x-amazon-apigateway-any-method:
      produces:
        - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri: ${index}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
        credentials: ${execution_role}
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,local-currency'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /{proxy+}:
    x-amazon-apigateway-any-method:
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        200:
          description: 200 response
          schema:
            type: object
            $ref: "#/components/schemas/empty"
      x-amazon-apigateway-integration:
        uri: ${index}
        httpMethod: POST
        type: aws_proxy
        credentials: ${execution_role}
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: 200 response
          schema:
            $ref: '#/components/schemas/empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,local-currency'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
x-amazon-apigateway-binary-media-types:
  - '*/*'
components:
  schemas:
    empty:
      title: the empty object
      type: object
